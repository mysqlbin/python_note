# Generated by Django 3.1.3 on 2021-01-13 04:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SlowQuery',
            fields=[
                ('checksum', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('fingerprint', models.TextField()),
                ('sample', models.TextField()),
                ('first_seen', models.DateTimeField(blank=True, null=True)),
                ('last_seen', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('reviewed_by', models.CharField(blank=True, max_length=20, null=True)),
                ('reviewed_on', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('reviewed_status', models.CharField(blank=True, max_length=24, null=True)),
            ],
            options={
                'db_table': 'mysql_slow_query_review',
            },
        ),
        migrations.CreateModel(
            name='SlowQueryHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname_max', models.CharField(max_length=64)),
                ('client_max', models.CharField(max_length=64, null=True)),
                ('user_max', models.CharField(max_length=64)),
                ('db_max', models.CharField(default=None, max_length=64, null=True)),
                ('sample', models.TextField()),
                ('ts_min', models.DateTimeField(db_index=True)),
                ('ts_max', models.DateTimeField()),
                ('ts_cnt', models.FloatField(blank=True, null=True)),
                ('query_time_sum', models.FloatField(blank=True, db_column='Query_time_sum', null=True)),
                ('query_time_min', models.FloatField(blank=True, db_column='Query_time_min', null=True)),
                ('query_time_max', models.FloatField(blank=True, db_column='Query_time_max', null=True)),
                ('query_time_pct_95', models.FloatField(blank=True, db_column='Query_time_pct_95', null=True)),
                ('query_time_stddev', models.FloatField(blank=True, db_column='Query_time_stddev', null=True)),
                ('query_time_median', models.FloatField(blank=True, db_column='Query_time_median', null=True)),
                ('lock_time_sum', models.FloatField(blank=True, db_column='Lock_time_sum', null=True)),
                ('lock_time_min', models.FloatField(blank=True, db_column='Lock_time_min', null=True)),
                ('lock_time_max', models.FloatField(blank=True, db_column='Lock_time_max', null=True)),
                ('lock_time_pct_95', models.FloatField(blank=True, db_column='Lock_time_pct_95', null=True)),
                ('lock_time_stddev', models.FloatField(blank=True, db_column='Lock_time_stddev', null=True)),
                ('lock_time_median', models.FloatField(blank=True, db_column='Lock_time_median', null=True)),
                ('rows_sent_sum', models.FloatField(blank=True, db_column='Rows_sent_sum', null=True)),
                ('rows_sent_min', models.FloatField(blank=True, db_column='Rows_sent_min', null=True)),
                ('rows_sent_max', models.FloatField(blank=True, db_column='Rows_sent_max', null=True)),
                ('rows_sent_pct_95', models.FloatField(blank=True, db_column='Rows_sent_pct_95', null=True)),
                ('rows_sent_stddev', models.FloatField(blank=True, db_column='Rows_sent_stddev', null=True)),
                ('rows_sent_median', models.FloatField(blank=True, db_column='Rows_sent_median', null=True)),
                ('rows_examined_sum', models.FloatField(blank=True, db_column='Rows_examined_sum', null=True)),
                ('rows_examined_min', models.FloatField(blank=True, db_column='Rows_examined_min', null=True)),
                ('rows_examined_max', models.FloatField(blank=True, db_column='Rows_examined_max', null=True)),
                ('rows_examined_pct_95', models.FloatField(blank=True, db_column='Rows_examined_pct_95', null=True)),
                ('rows_examined_stddev', models.FloatField(blank=True, db_column='Rows_examined_stddev', null=True)),
                ('rows_examined_median', models.FloatField(blank=True, db_column='Rows_examined_median', null=True)),
                ('rows_affected_sum', models.FloatField(blank=True, db_column='Rows_affected_sum', null=True)),
                ('rows_affected_min', models.FloatField(blank=True, db_column='Rows_affected_min', null=True)),
                ('rows_affected_max', models.FloatField(blank=True, db_column='Rows_affected_max', null=True)),
                ('rows_affected_pct_95', models.FloatField(blank=True, db_column='Rows_affected_pct_95', null=True)),
                ('rows_affected_stddev', models.FloatField(blank=True, db_column='Rows_affected_stddev', null=True)),
                ('rows_affected_median', models.FloatField(blank=True, db_column='Rows_affected_median', null=True)),
                ('rows_read_sum', models.FloatField(blank=True, db_column='Rows_read_sum', null=True)),
                ('rows_read_min', models.FloatField(blank=True, db_column='Rows_read_min', null=True)),
                ('rows_read_max', models.FloatField(blank=True, db_column='Rows_read_max', null=True)),
                ('rows_read_pct_95', models.FloatField(blank=True, db_column='Rows_read_pct_95', null=True)),
                ('rows_read_stddev', models.FloatField(blank=True, db_column='Rows_read_stddev', null=True)),
                ('rows_read_median', models.FloatField(blank=True, db_column='Rows_read_median', null=True)),
                ('merge_passes_sum', models.FloatField(blank=True, db_column='Merge_passes_sum', null=True)),
                ('merge_passes_min', models.FloatField(blank=True, db_column='Merge_passes_min', null=True)),
                ('merge_passes_max', models.FloatField(blank=True, db_column='Merge_passes_max', null=True)),
                ('merge_passes_pct_95', models.FloatField(blank=True, db_column='Merge_passes_pct_95', null=True)),
                ('merge_passes_stddev', models.FloatField(blank=True, db_column='Merge_passes_stddev', null=True)),
                ('merge_passes_median', models.FloatField(blank=True, db_column='Merge_passes_median', null=True)),
                ('innodb_io_r_ops_min', models.FloatField(blank=True, db_column='InnoDB_IO_r_ops_min', null=True)),
                ('innodb_io_r_ops_max', models.FloatField(blank=True, db_column='InnoDB_IO_r_ops_max', null=True)),
                ('innodb_io_r_ops_pct_95', models.FloatField(blank=True, db_column='InnoDB_IO_r_ops_pct_95', null=True)),
                ('innodb_io_r_ops_stddev', models.FloatField(blank=True, db_column='InnoDB_IO_r_ops_stddev', null=True)),
                ('innodb_io_r_ops_median', models.FloatField(blank=True, db_column='InnoDB_IO_r_ops_median', null=True)),
                ('innodb_io_r_bytes_min', models.FloatField(blank=True, db_column='InnoDB_IO_r_bytes_min', null=True)),
                ('innodb_io_r_bytes_max', models.FloatField(blank=True, db_column='InnoDB_IO_r_bytes_max', null=True)),
                ('innodb_io_r_bytes_pct_95', models.FloatField(blank=True, db_column='InnoDB_IO_r_bytes_pct_95', null=True)),
                ('innodb_io_r_bytes_stddev', models.FloatField(blank=True, db_column='InnoDB_IO_r_bytes_stddev', null=True)),
                ('innodb_io_r_bytes_median', models.FloatField(blank=True, db_column='InnoDB_IO_r_bytes_median', null=True)),
                ('innodb_io_r_wait_min', models.FloatField(blank=True, db_column='InnoDB_IO_r_wait_min', null=True)),
                ('innodb_io_r_wait_max', models.FloatField(blank=True, db_column='InnoDB_IO_r_wait_max', null=True)),
                ('innodb_io_r_wait_pct_95', models.FloatField(blank=True, db_column='InnoDB_IO_r_wait_pct_95', null=True)),
                ('innodb_io_r_wait_stddev', models.FloatField(blank=True, db_column='InnoDB_IO_r_wait_stddev', null=True)),
                ('innodb_io_r_wait_median', models.FloatField(blank=True, db_column='InnoDB_IO_r_wait_median', null=True)),
                ('innodb_rec_lock_wait_min', models.FloatField(blank=True, db_column='InnoDB_rec_lock_wait_min', null=True)),
                ('innodb_rec_lock_wait_max', models.FloatField(blank=True, db_column='InnoDB_rec_lock_wait_max', null=True)),
                ('innodb_rec_lock_wait_pct_95', models.FloatField(blank=True, db_column='InnoDB_rec_lock_wait_pct_95', null=True)),
                ('innodb_rec_lock_wait_stddev', models.FloatField(blank=True, db_column='InnoDB_rec_lock_wait_stddev', null=True)),
                ('innodb_rec_lock_wait_median', models.FloatField(blank=True, db_column='InnoDB_rec_lock_wait_median', null=True)),
                ('innodb_queue_wait_min', models.FloatField(blank=True, db_column='InnoDB_queue_wait_min', null=True)),
                ('innodb_queue_wait_max', models.FloatField(blank=True, db_column='InnoDB_queue_wait_max', null=True)),
                ('innodb_queue_wait_pct_95', models.FloatField(blank=True, db_column='InnoDB_queue_wait_pct_95', null=True)),
                ('innodb_queue_wait_stddev', models.FloatField(blank=True, db_column='InnoDB_queue_wait_stddev', null=True)),
                ('innodb_queue_wait_median', models.FloatField(blank=True, db_column='InnoDB_queue_wait_median', null=True)),
                ('innodb_pages_distinct_min', models.FloatField(blank=True, db_column='InnoDB_pages_distinct_min', null=True)),
                ('innodb_pages_distinct_max', models.FloatField(blank=True, db_column='InnoDB_pages_distinct_max', null=True)),
                ('innodb_pages_distinct_pct_95', models.FloatField(blank=True, db_column='InnoDB_pages_distinct_pct_95', null=True)),
                ('innodb_pages_distinct_stddev', models.FloatField(blank=True, db_column='InnoDB_pages_distinct_stddev', null=True)),
                ('innodb_pages_distinct_median', models.FloatField(blank=True, db_column='InnoDB_pages_distinct_median', null=True)),
                ('qc_hit_cnt', models.FloatField(blank=True, db_column='QC_Hit_cnt', null=True)),
                ('qc_hit_sum', models.FloatField(blank=True, db_column='QC_Hit_sum', null=True)),
                ('full_scan_cnt', models.FloatField(blank=True, db_column='Full_scan_cnt', null=True)),
                ('full_scan_sum', models.FloatField(blank=True, db_column='Full_scan_sum', null=True)),
                ('full_join_cnt', models.FloatField(blank=True, db_column='Full_join_cnt', null=True)),
                ('full_join_sum', models.FloatField(blank=True, db_column='Full_join_sum', null=True)),
                ('tmp_table_cnt', models.FloatField(blank=True, db_column='Tmp_table_cnt', null=True)),
                ('tmp_table_sum', models.FloatField(blank=True, db_column='Tmp_table_sum', null=True)),
                ('tmp_table_on_disk_cnt', models.FloatField(blank=True, db_column='Tmp_table_on_disk_cnt', null=True)),
                ('tmp_table_on_disk_sum', models.FloatField(blank=True, db_column='Tmp_table_on_disk_sum', null=True)),
                ('filesort_cnt', models.FloatField(blank=True, db_column='Filesort_cnt', null=True)),
                ('filesort_sum', models.FloatField(blank=True, db_column='Filesort_sum', null=True)),
                ('filesort_on_disk_cnt', models.FloatField(blank=True, db_column='Filesort_on_disk_cnt', null=True)),
                ('filesort_on_disk_sum', models.FloatField(blank=True, db_column='Filesort_on_disk_sum', null=True)),
                ('Bytes_sum', models.FloatField(blank=True, db_column='Bytes_sum', null=True)),
                ('Bytes_min', models.FloatField(blank=True, db_column='Bytes_min', null=True)),
                ('Bytes_max', models.FloatField(blank=True, db_column='Bytes_max', null=True)),
                ('Bytes_pct_95', models.FloatField(blank=True, db_column='Bytes_pct_95', null=True)),
                ('Bytes_stddev', models.FloatField(blank=True, db_column='Bytes_stddev', null=True)),
                ('Bytes_median', models.FloatField(blank=True, db_column='Bytes_median', null=True)),
                ('checksum', models.ForeignKey(db_column='checksum', db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='slowquery.slowquery')),
            ],
            options={
                'db_table': 'mysql_slow_query_review_history',
            },
        ),
    ]
